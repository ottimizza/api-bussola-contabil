server:
    port: ${PORT:5000}
    servlet: 
        context-path: /
        
# OAuth2 Environment Variables
oauth2-config:
    oauth2-server-url: ${OAUTH2_SERVER_URL:https://development-oauth-server.herokuapp.com}
    oauth2-client-id: ${OAUTH2_CLIENT_ID:81232c9b87ccc999bdf8}
    oauth2-client-secret: ${OAUTH2_CLIENT_SECRET:94faa32fd41083d267fa8b07523c425f526b4b8c}

storage-config:
    upload-id-bussola: ${UPLOAD_ID_BUSSOLA:development-user-photos}
    upload-accounting-id: ${UPLOAD_ACCOUNTING_ID:ottimizza}
    storage-url: ${STORAGE_URL:https://s3.tareffaapp.com.br:55325}

# Sentry Environment Variables
sentry-config:
    sentry-dsn: ${SENTRY_DSN}
    
spring: 
    datasource:
        url: jdbc:postgresql://ec2-174-129-43-40.compute-1.amazonaws.com:5432/d7pal51k24ps6p?sslmode=require
        username: dxnjbgxqavsznc
        password: d3e5a7c5b156126c127c8ade6f2dc4741c3ce95b116ca5494f37154d034de45c
        driver-class-name: org.postgresql.Driver

        tomcat:
            initial-size: 2 
      

    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: false
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                temp:    
                    use_jdbc_metadata_defaults: false
            
    servlet:
        multipart:
            enabled: true
            file-size-threshold: 2KB
            max-request-size: 215MB
            max-file-size: 200MB
    

security:
  jwt:
    # Chave pública para validação de Token JWT. :)
    # . . Pode ser um caminho: classpath:public-key.txt
    public-key: ${JWT_PUBLIC_KEY}
    
    #oauth2:
    #    client:
    #        clientId: ${oauth2-config.oauth2-client-id}
    #        clientSecret: ${oauth2-config.oauth2-client-secret}
    #        accessTokenUri: ${oauth2-config.oauth2-server-url}/oauth/token
    #        userAuthorizationUri: ${oauth2-config.oauth2-server-url}/oauth/authorize

    #   resource:
    #        userInfoUri: ${oauth2-config.oauth2-server-url}/user/info
    #        tokenInfoUri: ${oauth2-config.oauth2-server-url}/oauth/check_token
    #        filter_order: 3
            

setores: ${SETORES:[{"label":"Construção Civil","value":1},{"label":"Comércio Varejista","value":2},{"label":"Tecnologia","value":3},{"label":"Alimentação","value":4},{"label":"Serviços","value":5}]}

## MULTIPART (MultipartProperties)
# Enable multipart uploads
# spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
# spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
# spring.servlet.multipart.max-file-size=200MB
# Max Request Size
# spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
# file.upload-dir=./uploads